name: Multi-Platform Build

on:
  push:
    tags:
      - '*'

env:
  FLUTTER_VERSION: '3.27.1'
  JAVA_VERSION: '17'
  KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}

jobs:
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Setup Java (only for macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install Linux dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libasound2-dev

      - name: Configure Flutter for Desktop Platforms
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            flutter config --enable-linux-desktop;
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            flutter config --enable-windows-desktop;
          fi

      - name: Flutter Pub Get
        run: flutter pub get

  build_android:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Decode Keystore
        run: echo "${{ env.KEYSTORE_FILE }}" | base64 --decode > keystore.jks

      - name: Build Android APK (Mobile)
        run: flutter build apk --dart-define=isTV=false --release --split-per-abi
      - name: Rename Mobile APK
        run: mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build/app/outputs/flutter-apk/easyTV-${{ github.ref_name }}.apk

      - name: Build Android APK (TV)
        run: flutter build apk --dart-define=isTV=true --release
      - name: Rename TV APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/easyTV-${{ github.ref_name }}-tv.apk

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            build/app/outputs/flutter-apk/easyTV-${{ github.ref_name }}.apk
            build/app/outputs/flutter-apk/easyTV-${{ github.ref_name }}-tv.apk

  build_ios_macos:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Build iOS
        run: |
          flutter build ios --dart-define=isTV=false --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          mv Runner.app Payload/
          zip -r easyTV-${{ github.ref_name }}.ipa Payload

      - name: Build macOS
        run: |
          flutter build macos --dart-define=isTV=false --release
          cd build/macos/Build/Products/Release
          create-dmg --overwrite --dmg-title="easyTV-${{ github.ref_name }}" easyTV.app
          mv easyTV.dmg easyTV-${{ github.ref_name }}.dmg

      - name: Upload iOS and macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-macos-artifacts
          path: |
            build/ios/iphoneos/easyTV-${{ github.ref_name }}.ipa
            build/macos/Build/Products/Release/easyTV-${{ github.ref_name }}.dmg

  build_linux:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Build Linux
        run: |
          flutter build linux --dart-define=isTV=false --release
          cd build/linux/x64/release/bundle
          mkdir -p easyTV-${{ github.ref_name }}/usr/local/bin
          mv * easyTV-${{ github.ref_name }}/usr/local/bin
          dpkg-deb --build easyTV-${{ github.ref_name }}

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifact
          path: build/linux/x64/release/bundle/easyTV-${{ github.ref_name }}.deb

  build_windows:
    needs: setup
    runs-on: windows-latest
    steps:
      - name: Build Windows
        run: |
          flutter build windows --dart-define=isTV=false --release
          cd build/windows/x64/runner/Release
          iscc /DOutputDir=easyTV-${{ github.ref_name }}.exe setup_script.iss

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: build/windows/x64/runner/Release/easyTV-${{ github.ref_name }}.exe

  create_release:
    needs: [build_android, build_ios_macos, build_linux, build_windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          merge: true

      - name: Upload Release to GitHub
        uses: softprops/action-gh-release@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            release/**/*.apk
            release/**/*.ipa
            release/**/*.deb
            release/**/*.dmg
            release/**/*.exe
